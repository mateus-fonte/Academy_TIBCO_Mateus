<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Services/JdbcInsert/JdbcParse.process</pd:name>
    <pd:startName>File Poller</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="File Poller">
        <pd:type>com.tibco.plugin.file.FileEventSource</pd:type>
        <pd:resourceType>ae.activities.FileEventSourceResource</pd:resourceType>
        <pd:x>104</pd:x>
        <pd:y>65</pd:y>
        <config>
            <pollInterval>5</pollInterval>
            <createEvent>true</createEvent>
            <modifyEvent>true</modifyEvent>
            <deleteEvent>true</deleteEvent>
            <mode>files-and-directories</mode>
            <encoding>text</encoding>
            <sortby>File Name</sortby>
            <sortorder>descending</sortorder>
            <fileName>C:\Users\MateusFonte\OneDrive - Universidade de Aveiro\Documents\Lynxmind\Academy_tibco\Resources\producer.txt</fileName>
            <includeCurrent>true</includeCurrent>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>574</pd:endX>
    <pd:endY>70</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1691580741684</pd:targetNamespace>
    <pd:activity name="Parse Data">
        <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
        <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
        <pd:x>261</pd:x>
        <pd:y>65</pd:y>
        <config>
            <InputType>String</InputType>
            <Encoding>ASCII</Encoding>
            <ParseSharedConfig>/Services/JdbcInsert/Data Format.sharedparse</ParseSharedConfig>
            <SkipBlankLines>true</SkipBlankLines>
        </config>
        <pd:inputBindings>
            <Input>
                <text>
                    <xsl:value-of select="$File-Poller/ns:EventSourceOuputTextClass/fileContent/textContent"/>
                </text>
                <noOfRecords>
                    <xsl:value-of select="-1"/>
                </noOfRecords>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>419</pd:x>
        <pd:y>70</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/SharedResources/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>Insert into customers values(?,?,?,?,?);</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>NIF</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>Nome</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Morada</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Servico_contratado</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>numero_boxs</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <NIF>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Data/Output/Rows/root[1]/NIF)">
                            <xsl:value-of select="$Parse-Data/Output/Rows/root[1]/NIF"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </NIF>
                <Nome>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Data/Output/Rows/root[1]/Nome)">
                            <xsl:value-of select="$Parse-Data/Output/Rows/root[1]/Nome"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Nome>
                <Morada>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Data/Output/Rows/root[1]/Morada)">
                            <xsl:value-of select="$Parse-Data/Output/Rows/root[1]/Morada"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Morada>
                <Servico_contratado>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Data/Output/Rows/root[1]/Servico_contratado)">
                            <xsl:value-of select="$Parse-Data/Output/Rows/root[1]/Servico_contratado"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Servico_contratado>
                <numero_boxs>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-Data/Output/Rows/root[1]/numero_boxs)">
                            <xsl:value-of select="$Parse-Data/Output/Rows/root[1]/numero_boxs"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </numero_boxs>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>File Poller</pd:from>
        <pd:to>Parse Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Data</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>